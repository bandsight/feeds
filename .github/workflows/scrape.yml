name: Scrape + Deploy Pages

on:
  workflow_dispatch: {}
  schedule:
    - cron: "0 */6 * * *"

permissions:
  contents: write
  pages: write           # << required for deploy-pages
  id-token: write        # << required for OIDC

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  scrape:
    runs-on: ubuntu-latest
    outputs:
      artifact-path: ${{ steps.out.outputs.path }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install deps
        run: pip install -r requirements.txt

      - name: Ensure dirs
        run: |
          mkdir -p data feeds
          touch feeds/.nojekyll

      - name: Run scraper
        run: |
          python src/scraper.py \
            --councils data/councils.yaml \
            --out data/jobs_history.jsonl \
            --append \
            --delay 0.3 \
            --log INFO

      - name: Build feeds
        # If you don't have a builder, you can skip this and just rely on scraper output,
        # but assuming you *do* write/refresh feeds/feed.xml here:
        run: |
          python src/feeds_site_builder.py \
            --in data/jobs_history.jsonl \
            --out feeds/feed.xml

      - name: Commit updated artifacts (optional)
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          if ! git diff --cached --quiet; then
            git commit -m "chore: update jobs and feed"
            git push
          fi

      - name: Set output path
        id: out
        run: echo "path=." >> "$GITHUB_OUTPUT"

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Publish the whole repository tree so /feeds/feed.xml is included
          path: ${{ steps.out.outputs.path }}

  deploy:
    needs: scrape
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deploy
        uses: actions/deploy-pages@v4
